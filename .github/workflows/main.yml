name: Build React Native App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

# Déclaration des variables d'environnement globales
env:
  APP_NAME: "reactnativetest"
  NODE_VERSION: '18.x'

permissions:
  actions: write
  contents: read 
  
jobs:
  build-android:
    name: Build Android
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install dependencies
        run: |
          npm ci
          cd android && ./gradlew clean

      - name: Build APK
        run: |
          cd android && ./gradlew assembleRelease 
          mv app/build/outputs/apk/release/app-release.apk app/build/outputs/apk/release/${{ env.APP_NAME }}.apk
        env:
          MYAPP_UPLOAD_STORE_FILE: ../my-upload-key.keystore

          MYAPP_UPLOAD_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          MYAPP_UPLOAD_STORE_PASSWORD: ${{ secrets.ANDROID_STORE_PASSWORD }}
          MYAPP_UPLOAD_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

          ORG_GRADLE_PROJECT_reactNativeArchitectures: "armeabi-v7a,arm64-v8a,x86,x86_64"
          ORG_GRADLE_PROJECT_newArchEnabled: "true"
          ORG_GRADLE_PROJECT_hermesEnabled: "true"

      - name: Delete previous APK build artifacts
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const artifactsResponse = await github.request('GET /repos/{owner}/{repo}/actions/artifacts', {
                owner: context.repo.owner,
                repo: context.repo.repo,
              });

              const artifactsToDelete = artifactsResponse.data.artifacts.filter(artifact => 
                artifact.workflow_run.id !== context.runId && 
                artifact.name.startsWith('android-release-apk')
              );

              for (const artifact of artifactsToDelete) {
                await github.rest.actions.deleteArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifact.id,
                });
                  console.log(`Deleted artifact: ${artifact.name}`);
              }
            } catch (error) {
              console.error("Error deleting artifacts:", error);
            }
  
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-release-apk-${{ github.run_number }}
          path: android/app/build/outputs/apk/release/${{ env.APP_NAME }}.apk
          retention-days: 7

  build-ios:
    name: Build iOS
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Cache CocoaPods
        uses: actions/cache@v3
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
  
      - name: Install dependencies
        run: npm ci

      - name: Install CocoaPods
        run: |
          cd ios
          bundle config path vendor/bundle
          bundle install --retry 3 --jobs 4
          bundle exec pod install

      - name: Clean Xcode build
        run: |
          xcodebuild -workspace ios/${{ env.APP_NAME }}.xcworkspace -scheme ${{ env.APP_NAME }} -configuration Release -sdk iphoneos clean

      - name: Build iOS app
        run: |
          cd ios
          xcodebuild -workspace ${{ env.APP_NAME }}.xcworkspace -scheme ${{ env.APP_NAME }} -configuration Release -sdk iphoneos \
            -archivePath build/${{ env.APP_NAME }}.xcarchive archive \
            CODE_SIGN_IDENTITY="${{ secrets.IOS_CODE_SIGN_IDENTITY }}" \
            PROVISIONING_PROFILE="${{ secrets.IOS_PROVISIONING_PROFILE }}"
        env:
          DEVELOPER_CERTIFICATE: ${{ secrets.IOS_DEVELOPER_CERTIFICATE }}
          CERTIFICATE_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}

      - name: Delete previous ios build artifacts
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const artifactsResponse = await github.request('GET /repos/{owner}/{repo}/actions/artifacts', {
                owner: context.repo.owner,
                repo: context.repo.repo,
              });

              const artifactsToDelete = artifactsResponse.data.artifacts.filter(artifact => 
                artifact.workflow_run.id !== context.runId && 
                artifact.name.startsWith('ios-build-')
              );

              for (const artifact of artifactsToDelete) {
                await github.rest.actions.deleteArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifact.id,
                });
                console.log(`Deleted artifact: ${artifact.name}`);
              }
            } catch (error) {
              console.error("Error deleting artifacts:", error);
            }

      - name: Upload iOS build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-build-${{ github.run_number }}
          path: ios/build
          retention-days: 7
  
      - name: Create ExportOptions.plist
        run: |
          cd ios
          echo "$EXPORT_OPTIONS_PLIST_CONTENT" > ExportOptions.plist
        env:
          EXPORT_OPTIONS_PLIST_CONTENT: |
            <?xml version="1.0" encoding="UTF-8"?>
            <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
            <plist version="1.0">
            <dict>
                <key>method</key>
                <string>ad-hoc</string>
                <key>provisioningProfiles</key>
                <dict>
                    <key>$(PRODUCT_BUNDLE_IDENTIFIER)</key>
                    <string>${{ secrets.IOS_PROVISIONING_PROFILE_NAME }}</string>
                </dict>
                <key>signingCertificate</key>
                <string>${{ secrets.IOS_CODE_SIGN_IDENTITY }}</string>
                <key>signingStyle</key>
                <string>manual</string>
                <key>stripSwiftSymbols</key>
                <true/>
                <key>teamID</key>
                <string>${{ secrets.IOS_TEAM_ID }}</string>
            </dict>
            </plist>
  
      - name: Export IPA from archive
        run: |
            cd ios
            xcodebuild -exportArchive -archivePath build/${{ env.APP_NAME }}.xcarchive -exportPath build/ipa \
              -exportOptionsPlist ExportOptions.plist  

      - name: Delete previous IPA artifacts
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const artifactsResponse = await github.request('GET /repos/{owner}/{repo}/actions/artifacts', {
                owner: context.repo.owner,
                repo: context.repo.repo,
              });

              const artifactsToDelete = artifactsResponse.data.artifacts.filter(artifact => 
                artifact.workflow_run.id !== context.runId && 
                artifact.name.startsWith('ios-release-ipa')
              );

              for (const artifact of artifactsToDelete) {
                await github.rest.actions.deleteArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifact.id,
                });
                console.log(`Deleted artifact: ${artifact.name}`);
              }
            } catch (error) {
              console.error("Error deleting artifacts:", error);
            }
      
      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios-release-ipa-${{ github.run_number }}
          path: ios/build/ipa/${{ env.APP_NAME }}.ipa
          retention-days: 7

  deploy-android:
    name: Deploy to Android Store
    needs: build-android
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download Android APK
        uses: actions/download-artifact@v4
        with:
          name: android-release-apk-${{ github.run_number }}
          path: artifacts/android
          
      - name: Deploy to Android store
        run: |
          echo "TODO"
            
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/android/${{ env.APP_NAME }}.apk
          name: Release android ${{ github.run_number }}
          tag_name: v1.0.${{ github.run_number }}-android
          body: |
            Release automatique générée par GitHub Actions.
            
            Commit: ${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.REACTNATIVETEST_TOKEN }}

  deploy-ios:
    name: Deploy to iOS Store
    needs: build-ios
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download iOS IPA
        uses: actions/download-artifact@v4
        with:
          name: ios-release-ipa-${{ github.run_number }}
          path: artifacts/ios
          
      - name: Deploy to iOS store
        run: |
          echo "TODO"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/ios/${{ env.APP_NAME }}.ipa
          name: Release iOS ${{ github.run_number }}
          tag_name: v1.0.${{ github.run_number }}-ios
          body: |
            Release automatique générée par GitHub Actions.
            
            Commit: ${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.REACTNATIVETEST_TOKEN }}